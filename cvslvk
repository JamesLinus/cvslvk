#!/bin/sh
# Вспомогательный скрипт для работы с CVS в ЛВК

# Файл, в котором сохраняется информация о параметрах, с которыми производится
# сборка в данном каталоге
PARAMS_FILE=.cl_check_dir
PARAMS_FILE_TMP=.cl_check_dir.tmp	# Временная копия того же файла

# Файл, создаваемый по cvslvk make_rules
RULES_CVSLVK=$CL_DIR/rules.cvslvk
RULES_CVSLVK_TMP=$CL_DIR/rules.cvslvk.tmp  # Временная копия того же файла

# Группа пользователей CVS
CVSGROUP=cvsusers

MYPID=$$
kill_make()
{
  MAKEPID=`(echo $MYPID; ps -l) | awk -f $CL_DIR/getppid.awk`
  kill $MAKEPID;
  exit 1;
}

if test ! -f $CL_DIR/Makefile.cvslvk; then
  echo 'CL_DIR is not set' 1>&2
  exit 1
fi

if test "$CL_VERBOSE" != ""; then echo $* 1>&2; fi

echo_build_error()
{
      echo 1>&2
      echo "*** BUILD ERROR ***" 1>&2
      echo 1>&2
}


# check_vars ИМЯ=значение ...
check_vars()
{
  res=0
  while test "$1" != ""; do
    tmp=`echo $1 | cut -f2 -d=`
    if test "$tmp" = ""; then
      var=`echo $1 | cut -f1 -d=`
      if test $res -eq 0; then echo_build_error; fi
      echo "$var is not set" 1>&2
      res=1
    fi
    shift
  done
  if test $res -eq 1; then echo 1>&2; kill_make; fi
}


# get_arch
get_arch()
{
  arch=`uname -m`
  case "$arch" in
    *86*)        echo x86   ;;
    sun*|sparc)  echo sparc ;;
  esac
}


# get_os
get_os()
{
  arch=`uname -s`
  case "$arch" in
    Linux|linux)  echo linux    ;;
    SunOS)        echo solaris  ;;
  esac
}


# make_rules
make_rules()
{
  cd $CL_DIR
  echo "# This file is automatically generated by 'cvslvk make_rules'" > $RULES_CVSLVK_TMP
  for i in */rules.cvslvk; do
    if test -f $i; then
      dir=`dirname $i`
      echo >> $RULES_CVSLVK_TMP
      echo 'ifeq ($(findstring '$dir',$(CL_MODULES_WI)), '$dir')' >> $RULES_CVSLVK_TMP
      echo 'override CL_WI = $(CL_DIR)'/$dir >> $RULES_CVSLVK_TMP
      echo 'include $(CL_DIR)/'$i >> $RULES_CVSLVK_TMP
      echo 'endif' >> $RULES_CVSLVK_TMP
    fi
  done
  mv $RULES_CVSLVK_TMP $RULES_CVSLVK
  chgrp $CVSGROUP $RULES_CVSLVK
  chmod 664 $RULES_CVSLVK
}


# find_modules $CL_DIR_PARAMS <список обращений>
# Формат именования инсталляций: <модуль>_<версия>_<параметры-сборки>
# Выдает в stdout в соответствующем порядке список инсталляций, для
# не найденных - NONE

find_modules()
{
  if test "$2" = ""; then return 0; fi
  cdp=`echo $1 | cut -d- -f1-2`  # arch-os
  odp=`echo $1 | cut -d- -f3-`   # все остальное
  shift
  cd $CL_DIR
  for ref in $*; do
    ref_mod=`echo $ref | awk -F_ '{print($1)}'`
    ref_ver=`echo $ref | awk -F_ '{print($2)}'`
    ref_bld=`echo $ref | awk -F_ '{print($3)}'`
    if test "$ref_ver" = ""; then
      list=$ref_mod'_'*'_'$cdp*;
    else
      list=$ref_mod'_'$ref_ver'_'$cdp*;
    fi
    if test ! -d `echo $list | cut -d" " -f1`; then
      echo NONE
    else
      (echo $ref_bld; echo $odp; echo $list) | awk -f $CL_DIR/find_wi.awk
    fi
  done
}


# show_wi <список-обращений> -- <список-экземпляров>
show_wi()
{
  echo $* | awk -f $CL_DIR/show_wi.awk
}


# check_wi <список-обращений> -- <список-экземпляров>
check_wi()
{
  if echo $* | awk -f $CL_DIR/check_wi.awk >/dev/null 2>&1; then true; else
    echo_build_error
    echo $* | awk -f $CL_DIR/check_wi.awk 1>&2
    echo 1>&2
    kill_make; return 1
  fi
  return 0
}


# depend <имя входного файла> <имя выходного файла> <параметры для cpp>
depend()
{
  cpp=cpp
  file=$1;  dep=$2;  shift 2
  echo "Calculating dependences for $file ..."
  (printf "%s `dirname $dep`/" $dep; $cpp -MM $* $file ) > $dep
  res=$?
  if test $res -ne 0; then rm -f $dep; fi
  return $res
}


# prepare_wi <полное имя инсталляции>
prepare_wi()
{
  cd $CL_DIR
  if test -e $1; then
    echo_build_error
    echo "The working installation $1 already exists" 1>&2
    echo "If you wish, you may remove in by running" 1>&2
    echo "  cvslvk remove_wi $1" 1>&2
    echo 1>&2
    return 1
  fi

  mkdir $1
  return $?
}


# complete_wi <полное имя инсталляции>
complete_wi()
{
  cd $CL_DIR
  find $1 -exec chgrp $CVSGROUP \{\} \;
  find $1 -exec chmod ug+rw \{\} \;

  make_rules
}


# remove_wi <полное имя инсталляции>
remove_wi()
{
  cd $CL_DIR
  if test ! -d $1; then
    echo "No such working installation $1" 1>&2
    return 1;
  fi

  rm -rf $1
  make_rules
}


selfupdate()
{
  mkdir -p $CL_DIR/tmp/$USER
  chgrp $CVSGROUP $CL_DIR/tmp 2>/dev/null
  chmod 775 $CL_DIR/tmp 2>/dev/null
  cd $CL_DIR/tmp/$USER
  cvs checkout cvslvk > /dev/null
  cd cvslvk
  cp $Makefile.cvslvk cvslvk *.awk $CL_DIR/
  cd $CL_DIR
  chgrp $CVSGROUP $FILES
  chmod ug+w $FILES
  rm -r $CL_DIR/tmp/$USER/cvslvk
  make_rules
}


command=$1
shift

case "$command" in
  check_vars|get_arch|get_os|make_rules|find_modules|\
  show_wi|check_wi|depend|prepare_wi|complete_wi|remove_wi|\
  selfupdate)
    $command $*
    exit $?
    ;;
  *)
    echo "cvslvk: unknown command: $command" 1>&2
    exit 1
    ;;
esac
