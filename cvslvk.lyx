#This file was created by <nikita> Mon Nov 15 19:10:05 1999
#LyX 0.12 (C) 1995-1998 Matthias Ettrich and the LyX Team
\lyxformat 2.15
\textclass article
\begin_preamble
\usepackage[koi8-r]{inputenc}
\usepackage[russian]{babel}
\sloppy
\end_preamble
\language default
\inputencoding default
\fontscheme default
\graphics default
\float_placement ht
\paperfontsize default
\spacing single 
\papersize Default
\paperpackage widemarginsa4
\use_geometry 0
\use_amsmath 0
\paperorientation portrait
\secnumdepth 2
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language english
\quotes_times 2
\papercolumns 1
\papersides 1
\paperpagestyle default

\layout Standard
\line_top \line_bottom \align center 

\size huge 
Система CVSLVK
\size default 

\newline 

\emph on 
последнее изменение в этот документ внесено 15.11.1999
\newline 

\layout Section

Обзор возможностей системы
\layout Standard

Система CVSLVK предназначена для автоматизации процесса сборки программ
 в процессе их разработки и отладки.
 
\layout Standard

Целью разработки системы было максимальное упрощение действий пользователя
 по сборке программ в среде UNIX и снижение вероятности ошибок сборки, не
 диагностируемых стандартными средствами сборки.
 Вместе с системой управления версиями CVS система CVSLVK позволяет избежать
 большинства стандартных проблем, возникающих при совместной разработке
 нескольких взаимозависимых модулей несколькими разработчиками в сети, в
 состав которой входят машины с различной архитектурой и различными версиями
 ОС UNIX.
\begin_float footnote 
\layout Standard

В данный момент поддерживаются архитектуры sparc и x86 и операционные системы
 Linux и Solaris
\end_float 
\layout Standard

Ниже перечисляются основные возможности системы CVSLVK.
\layout Itemize

В большинстве случаев для сборки исполняемого модуля достаточно просто указать
 его имя и перечислить файлы исходных текстов.
 Размер пользовательского Makefile-а составляет при этом всего 3 строки.
\layout Itemize

Система обеспечивает автоматическое отслеживание зависимостей файлов между
 собой и пересборку тех и только тех из них, которые нуждаются в пересборке.
 Команда 
\begin_inset Quotes eld
\end_inset 

make
\begin_inset Quotes erd
\end_inset 

 всегда создаст корректный исполняемый файл, вне зависимости от состояния
 рабочего каталога перед ее выполнением, причем сделает это в минимально
 возможное время.
\layout Itemize

Система пытается скрыть различия между архитектурами и компиляторами, оставляя
 тем не менее возможность индивидуальной настройки под конкретные комбинации.
\layout Itemize

Система позволяет одной командой полностью собирать модуль с различными
 параметрами сборки, в т.ч.
 для отладки или с оптимизациями; различными компиляторами; различными режимами
 использования разделяемых библиотек; любыми пользовательскими параметрами.
 Смешивание объектных файлов с различными параметрами сборки исключено.
 Возможно параллельно работать с несколькими сборками, не осуществляя полных
 перетрансляций при переходе между ними.
\layout Itemize

Система предоставляет простой (сводящийся к установке единственной переменной
 в Makefile-ах) механизм контроля необходимых переменных среды.
 Если корректная работа модуля зависит от переменных среды, работа продолжится
 только после корректной их установки.
\layout Itemize

Система обеспечивает прозрачный механизм создания и использования динамических
 библиотек.
 По умолчанию все создаваемые библиотеки динамические.
 Обеспечивается их корректный поиск и динамическая линковка без каких-либо
 дополнительных установок пользователя.
\newline 
Кроме того, в систему встроены средства контроля порядка подсоединения библиотек
 при сборке исполняемого файла, что бывает полезно при использовании некоторых
 приемов программирования.
\layout Itemize

Система обеспечивает мощный механизм управления зависимостями между модулями.
 Для использования внешнего модуля достаточно только указать его имя.
 Система автоматически выберет нужную версию каждого из используемых модулей
 и корректно ее подключит.
\layout Itemize

Свойства каждого модуля описываются при помощи привязанного к нему включаемого
 Makefile-а, синтаксис которого предоставляет очень широкие возможности
 по определению семантики модуля.
 В результате внешним модулем может быть библиотека, средство генерации
 исходных текстов по грамматике, вся среда DYANA и т.д., причем прозрачно
 для пользователя.
\layout Itemize

Вся система представляет из себя несколько текстовых файлов, которые при
 необходимости легко модифицируются и подстраиваются под нужды конкретного
 проекта.
\layout Standard

В принципе, система позволяет работу с ней неподготовленного пользователя.
 Однако, как и везде в системе UNIX, для наиболее полного использования
 всех предоставляемых возможностей пользователю необходимы знания.
 В частности, пользователю следует хорошо понимать, из каких этапов состоит
 сборка исполняемого файла из исходных текстов и какие преобразования файлов
 при этом имеют место.
 Также следует представлять алгоритм работу утилиты make и синтаксис Makefile-ов.
\begin_float footnote 
\layout Standard

Если пользователь хочет автоматизировать более сложные процессы, для которых
 стандартный синтаксис Makefile-а недостаточен, то следует изучить расширенный
 синтаксис GNU make, который и был использован для написания системы CVSLVK
\end_float 
 
\layout Section

Требования
\layout Standard

Система CVSLVK имеет следующие требования:
\layout Enumerate

Система CVSLVK работает ТОЛЬКО с 
\family typewriter 
GNU make
\family default 
.
 Sun-овский 
\family typewriter 
make
\family default 
 работать НЕ БУДЕТ.
\newline 
На серверах 
\family typewriter 
redsun
\family default 
, 
\family typewriter 
chronos
\family default 
 и 
\family typewriter 
tornado
\family default 
 для обеспечения работоспособности системы следует поставить 
\family typewriter 
/usr/local/bin
\family default 
 в 
\family typewriter 
$PATH
\family default 
 на первое место.
\layout Enumerate

Переменная среды 
\family typewriter 
CL_DIR
\family default 
 должна указывать на каталог системы.
\newline 
На серверах 
\family typewriter 
redsun
\family default 
, 
\family typewriter 
chronos
\family default 
, 
\family typewriter 
snuppy 
\family default 
и 
\family typewriter 
tornado
\family default 
 каталогом системы является 
\family typewriter 
/usr/local/builds
\family default 
.
\layout Section

Простейшее использование
\layout Standard

Пусть пользовательская программа 
\family typewriter 
myprogram
\family default 
 собирается из файлов 
\family typewriter 
main.c
\family default 
, 
\family typewriter 
lib.c
\family default 
, 
\family typewriter 
global.h
\family default 
 и 
\family typewriter 
lib.h
\family default 
.
 При этом файл 
\family typewriter 
global.h
\family default 
 включается в оба Си-файла, а файл 
\family typewriter 
lib.h
\family default 
 -- только в файл 
\family typewriter 
lib.c
\family default 
.
 В этом случае Makefile будет иметь следующий вид:
\layout LyX-Code

EXECUTABLE = myprogram
\layout LyX-Code

SOURCES = main.c lib.c
\layout LyX-Code

include $(CL_DIR)/Makefile.cvslvk
\layout Standard

При этом:
\layout Itemize

По команде 
\family typewriter 
make
\family default 
 будет создан исполняемый файл без оптимизаций и с отладочной информацией,
 при помощи компилятора gcc.
 Т.е.
 будет подготовлено все для отладки программы отладчиком gdb или ddd.
\layout Itemize

При изменении файла 
\family typewriter 
main.c
\family default 
 и повторного вызова 
\family typewriter 
make
\family default 
 будет перетранслирован только файл 
\family typewriter 
main.c
\family default 
.
 При изменении файла 
\family typewriter 
lib.c
\family default 
 или 
\family typewriter 
lib.h
\family default 
 будет перетранслирован файл 
\family typewriter 
lib.c
\family default 
.
 При изменении файла 
\family typewriter 
global.h
\family default 
 будут перетранслированы оба Си-файла.
 Легко видеть, что именно такие перетрансляции необходимы в данном случае.
 Однако, явно они нигде не указывались.
 Зависимости в системе CVSLVK вычисляются автоматически.
\layout Section

Пользовательский справочник
\layout Section

Сообщения об ошибках
\layout Section

Техническое описание системы
\layout Section

Простейшее использование
\layout Standard

Пользовательский 
\family typewriter 
Makefile
\family default 
 для сборки программы (в т.ч.
 модели на DYANA) устроен следующим образом:
\layout LyX-Code

CL_USE_MODULES = <список используемых модулей>
\layout LyX-Code

EXECUTABLE = <имя>
\layout LyX-Code

SOURCES = <список файлов>
\layout LyX-Code

<Возможно, определения других переменных>
\layout LyX-Code

include $(CL_DIR)/Makefile.cvslvk
\layout Standard

В переменной 
\family typewriter 
SOURCES
\family default 
 указываются все исходные файлы (на Си, Cи++ и mm-языке, можно перемешивать).
 Однако, сейчас все файлы должны быть в текущем каталоге.
\layout Standard


\family typewriter 
EXECUTABLE
\family default 
 -- имя результирующего исполняемого файла.
\layout Standard


\family typewriter 
CL_USE_MODULES
\family default 
 -- список используемых модулей.
 Если никакие модули не используются, эту переменную определять не надо.
\newline 
Модули разделяются пробелами.
 Ссылка на каждый модуль содержит до трех частей, разделенных символом подчеркив
ания.
 Первое поле -- имя модуля.
 Второе -- имя версии (если его нет или это 
\family typewriter 
any
\family default 
, значит годится любая версия).
 Третье поле -- дополнительные параметры -- строки разделенные дефисами
 -- обычно не нужны.
\newline 
Для моделей на mm-языке должно быть 
\begin_inset Quotes eld
\end_inset 


\family typewriter 
CL_USE_MODULES
\protected_separator 
=
\protected_separator 
mmt libmon
\family default 

\begin_inset Quotes erd
\end_inset 


\layout Standard

Простейший сервис:
\layout Itemize


\family typewriter 
make
\family default 
 (без параметров) произведет сборку исполняемого файла 
\family typewriter 
EXECUTABLE
\family default 
 (при этом все будет собрано в некотором подкаталоге, а из текущего каталога
 будет проставлена ссылка туда);
\layout Itemize


\family typewriter 
make clean
\family default 
 удалит все файлы, созданные при 
\family typewriter 
make
\family default 
;
\layout Itemize

при повторных запусках make автоматически будут пересобираться те и только
 те файлы, которые требуют этого;
\layout Itemize

по умолчанию исполняемый файл будет готов к отладке (т.е.
 собран с отладочной информацией и без оптимизаций)
\layout Standard

Весь остальной сервис доступен через определение переменных.
\layout Section

Переменные
\layout Standard

Переменные можно определять внутри Makefile-а, в командной строке make-а,
 в окружении.
\layout Standard

Документация по переменным доступна в виде комментариев в файле 
\family typewriter 
$CL_DIR/Makefile.cvslvk
\layout Section

Создание своего модуля
\the_end
